{#
This template gets the following parameters :
- 'card' (Card Entity)
- 'action' as per the card->getAction() function
#}
{% if card.getPreciseType()=='Senator' or card.getPreciseType()=='Statesman'%}
    <div class="span3 sprite sprite-Senator col-md-1" card_id='{{card.getId()}}' treasury='{{card.getTreasury()}}' item_name='{{ card.getName() }}'>
        {# Senator's name :
            - In red if the Senator is the party leader. 'leader' must be passed to the template to work or will default to FALSE
            - If the Statesman is in hand, 'playable' should be set (returns a boolean flag and a message), otherwise, defaults to an empty message
            - The Statesman message will be set as a tooltip ('title' property)
            - If the card has a Statesman, put brackets around SenatorID
         #}
        <div class="sprite-position-name" {{card.isLeader() ? 'style="color: red;"' : ''}} title="{{card.statesmanPlayable(app.user.id)['message']|default('')}}">
            {{ card.getName() }}<br>
            {{ card.getHasStatesman() ? '[' ~ card.getSenatorID() ~ ']' : card.getSenatorID() }}
        </div>
        <div class="sprite-position-MIL">{{card.getMIL()}}</div>
        <div class="sprite-position-ORA">{{card.getORA()}}</div>
        <div class="sprite-position-LOY">{{card.getLOY()}}</div>
        <div class="sprite-position-treasury">{{card.getTreasury()}}</div>
        {% if card.getINF() > 0 %}
            <div class="sprite sprite-Marker_{{card.getINF() % 10}} sprite-position-INF"></div>
        {% endif %}
        {% if card.getINF() >= 10 %}
            <div class="sprite sprite-Marker_{{card.getINF() / 10}} sprite-position-INF10"></div>
        {% endif %}
        {% if card.getPOP() > 0 %}
            <div class="sprite sprite-Marker_{{card.getPOP()}} sprite-position-POP"></div>
        {% endif %}
        {% if card.getKnights()> 0 %}
            <div class="sprite sprite-Marker_{{card.getKnights()}}knights sprite-position-knights"></div>
        {% endif %}
        {% if card.getCorrupt() %}
            <div class="sprite sprite-Marker_Corrupt sprite-position-corrupt"></div>
        {% endif %}
        {% if card.getPriorConsul() %}
            <div class="sprite sprite-Marker_PriorConsul sprite-position-PriorConsul"></div>
        {% endif %}
        {% if card.getOffice() != null %}
            <div class="sprite sprite-Office_{{card.getOffice()|replace({' ': '-'})}} sprite-position-office"></div>
        {% endif %}
        <div class="sprite-position-card-id">{{"%03d"|format(card.getId())}}</div>
        {#
{% elseif card.getPreciseType()=='Conflict' %}
    <div class="span3 sprite sprite-Card" card_id='{{card.getId()}}'>
        <div class="sprite-position-card-name">{{card.name}}</div>
        <div class="sprite-position-card-subname">{{card.description}} (1 of {{card.nbOfMatch}} {{card.matches}})</div>
        <div class="sprite-position-card-text">Inactive until attacked or Matched.
            {% if card.creates!=null %}
                <br><br>Victory creates {{card.creates}}</div>
            {% endif %}
        <div class="sprite-position-card-attacks">Attacks :{{card.attacks}}</div>
    </div>
#}
{% elseif card.getPreciseType()=='Concession' %}
    <div class="span3 sprite sprite-Card col-md-1" card_id='{{card.getId()}}' verb='{{action['drag']|default()}}'>
        <div class="sprite-position-card-name">{{card.getName()}}</div>
        <div class="sprite-position-card-subname">Income : {{card.getIncome()}}</div>
        {% if card.getSpecial()!=NULL %}
            <div class="sprite-position-card-attacks">Special :{{card.getSpecial()}}</div>
        {% endif %}
        {% if card.getCorrupt() %}
            <div class="sprite sprite-Marker_Corrupt sprite-position-corrupt"></div>
        {% endif %}
{% else %}
    <div class="span3 sprite sprite-Card col-md-1" card_id='{{card.getId()}}' verb=''>
        <div class="sprite-position-card-name">{{card.getName()}}</div>
{% endif %}

{#
    Is there a drop down menu for this card ? In which case, display it with its action
#}
{% if action['menu']|default(FALSE) != FALSE %}
    <div class="sprite-position-topright dropdown">
        <button class="btn btn-default dropdown-toggle" type="button" id="cardMenu_{{card.getId()}}" data-toggle="dropdown" aria-expanded="true">
            <span class="glyphicon glyphicon-collapse-down" aria-hidden="true" style="font-size: 1.5em;"></span>
        </button>
        <ul class="sprite-position-topright dropdown-menu" role="menu" aria-labelledby="cardMenu_{{card.getId()}}" style="background: transparent; border: 0; box-shadow: 0px 0px 0px;">
            <form class='form-inline json-submit' user_id='{{app.user.id}}' verb='{{action['menu']|default()}}'>
                <li role="presentation">
                    <input type="hidden" name="card_id" value="{{card.getId()}}">
                    <button role="menuitem" tabindex="-1" type="submit" class="btn btn-lg btn-primary">{{action['menu']}}</button>
                </li>
            </form>
        </ul>
    </div>
{% endif %}

{#
    Does this card have other cards under its control ? If yes, display them in a collapsable row
#}
{% if card.hasControlledCards() %}
    <div class="sprite-position-topleft">
        <a href="#CardsControlledBy_{{card.getId()}}" class="btn btn-default" data-toggle="collapse">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
        </a>
        <div id="CardsControlledBy_{{card.getId()}}" class="row collapse sprite-modal">
            {% for controlledCard in card.getCardsControlled().getCards() %}
                {% embed "BoardElements/Card.twig" with
                    {
                        'card': controlledCard ,
                        'action': controlledCard.getAction()
                    } only 
                %}
                {% endembed %}
            {% endfor %}
        </div>
    </div>
{% endif %}

    </div>
