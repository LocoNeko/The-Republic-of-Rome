<?php

namespace DoctrineProxy\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Game extends \Entities\Game implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'turn', 'phase', 'subPhase', 'initiative', 'censorIsDone', 'senateAdjourned', 'scenario', 'variants', 'unrest', 'treasury', '' . "\0" . 'Entities\\Game' . "\0" . 'parties', '' . "\0" . 'Entities\\Game' . "\0" . 'cards', '' . "\0" . 'Entities\\Game' . "\0" . 'created', '' . "\0" . 'Entities\\Game' . "\0" . 'timezone', '' . "\0" . 'Entities\\Game' . "\0" . 'localized');
        }

        return array('__isInitialized__', 'id', 'name', 'turn', 'phase', 'subPhase', 'initiative', 'censorIsDone', 'senateAdjourned', 'scenario', 'variants', 'unrest', 'treasury', '' . "\0" . 'Entities\\Game' . "\0" . 'parties', '' . "\0" . 'Entities\\Game' . "\0" . 'cards', '' . "\0" . 'Entities\\Game' . "\0" . 'created', '' . "\0" . 'Entities\\Game' . "\0" . 'timezone', '' . "\0" . 'Entities\\Game' . "\0" . 'localized');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Game $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getTurn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTurn', array());

        return parent::getTurn();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhase', array());

        return parent::getPhase();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhase($phase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhase', array($phase));

        return parent::setPhase($phase);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubPhase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubPhase', array());

        return parent::getSubPhase();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubPhase($subPhase)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubPhase', array($subPhase));

        return parent::setSubPhase($subPhase);
    }

    /**
     * {@inheritDoc}
     */
    public function getInitiative()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInitiative', array());

        return parent::getInitiative();
    }

    /**
     * {@inheritDoc}
     */
    public function setInitiative($i)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitiative', array($i));

        return parent::setInitiative($i);
    }

    /**
     * {@inheritDoc}
     */
    public function getCensorIsDone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCensorIsDone', array());

        return parent::getCensorIsDone();
    }

    /**
     * {@inheritDoc}
     */
    public function setCensorIsDone($flag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCensorIsDone', array($flag));

        return parent::setCensorIsDone($flag);
    }

    /**
     * {@inheritDoc}
     */
    public function getSenateAdjourned()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSenateAdjourned', array());

        return parent::getSenateAdjourned();
    }

    /**
     * {@inheritDoc}
     */
    public function setSenateAdjourned($flag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSenateAdjourned', array($flag));

        return parent::setSenateAdjourned($flag);
    }

    /**
     * {@inheritDoc}
     */
    public function setScenario($scenario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScenario', array($scenario));

        return parent::setScenario($scenario);
    }

    /**
     * {@inheritDoc}
     */
    public function getScenario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScenario', array());

        return parent::getScenario();
    }

    /**
     * {@inheritDoc}
     */
    public function getVariants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariants', array());

        return parent::getVariants();
    }

    /**
     * {@inheritDoc}
     */
    public function getUnrest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnrest', array());

        return parent::getUnrest();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnrest($unrest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnrest', array($unrest));

        return parent::setUnrest($unrest);
    }

    /**
     * {@inheritDoc}
     */
    public function getTreasury()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTreasury', array());

        return parent::getTreasury();
    }

    /**
     * {@inheritDoc}
     */
    public function setTreasury($treasury)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTreasury', array($treasury));

        return parent::setTreasury($treasury);
    }

    /**
     * {@inheritDoc}
     */
    public function getParties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParties', array());

        return parent::getParties();
    }

    /**
     * {@inheritDoc}
     */
    public function getCards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCards', array());

        return parent::getCards();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimezone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimezone', array());

        return parent::getTimezone();
    }

    /**
     * {@inheritDoc}
     */
    public function nextTurn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'nextTurn', array());

        return parent::nextTurn();
    }

    /**
     * {@inheritDoc}
     */
    public function nextInitiative()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'nextInitiative', array());

        return parent::nextInitiative();
    }

    /**
     * {@inheritDoc}
     */
    public function addVariant($variant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVariant', array($variant));

        return parent::addVariant($variant);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVariant($variant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVariant', array($variant));

        return parent::removeVariant($variant);
    }

    /**
     * {@inheritDoc}
     */
    public function changeUnrest($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeUnrest', array($value));

        return parent::changeUnrest($value);
    }

    /**
     * {@inheritDoc}
     */
    public function changeTreasury($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeTreasury', array($amount));

        return parent::changeTreasury($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function userAlreadyJoined($user_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'userAlreadyJoined', array($user_id));

        return parent::userAlreadyJoined($user_id);
    }

    /**
     * {@inheritDoc}
     */
    public function partyAlreadyExists($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'partyAlreadyExists', array($name));

        return parent::partyAlreadyExists($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumberOfPlayers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumberOfPlayers', array());

        return parent::getNumberOfPlayers();
    }

    /**
     * {@inheritDoc}
     */
    public function getGameInfos($user_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGameInfos', array($user_id));

        return parent::getGameInfos($user_id);
    }

}
