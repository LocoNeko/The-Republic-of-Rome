<?php

namespace DoctrineProxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Senator extends \Entities\Senator implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'senatorID', 'baseMIL', 'baseORA', 'baseLOY', 'baseINF', 'MIL', 'ORA', 'LOY', 'INF', 'specialLOY', 'specialAbility', 'hasStatesman', 'knights', 'treasury', 'POP', 'office', 'priorConsul', 'corrupt', 'major', 'rebel', 'captive', 'freeTribune', 'returningGovernor', '' . "\0" . 'Entities\\Senator' . "\0" . 'leaderOf', 'internalId', 'id', 'name');
        }

        return array('__isInitialized__', 'senatorID', 'baseMIL', 'baseORA', 'baseLOY', 'baseINF', 'MIL', 'ORA', 'LOY', 'INF', 'specialLOY', 'specialAbility', 'hasStatesman', 'knights', 'treasury', 'POP', 'office', 'priorConsul', 'corrupt', 'major', 'rebel', 'captive', 'freeTribune', 'returningGovernor', '' . "\0" . 'Entities\\Senator' . "\0" . 'leaderOf', 'internalId', 'id', 'name');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Senator $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setSenatorID($senatorID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSenatorID', array($senatorID));

        return parent::setSenatorID($senatorID);
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseMIL($baseMIL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseMIL', array($baseMIL));

        return parent::setBaseMIL($baseMIL);
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseORA($baseORA)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseORA', array($baseORA));

        return parent::setBaseORA($baseORA);
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseLOY($baseLOY)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseLOY', array($baseLOY));

        return parent::setBaseLOY($baseLOY);
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseINF($baseINF)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseINF', array($baseINF));

        return parent::setBaseINF($baseINF);
    }

    /**
     * {@inheritDoc}
     */
    public function setMIL($MIL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMIL', array($MIL));

        return parent::setMIL($MIL);
    }

    /**
     * {@inheritDoc}
     */
    public function setORA($ORA)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setORA', array($ORA));

        return parent::setORA($ORA);
    }

    /**
     * {@inheritDoc}
     */
    public function setLOY($LOY)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLOY', array($LOY));

        return parent::setLOY($LOY);
    }

    /**
     * {@inheritDoc}
     */
    public function setINF($INF)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setINF', array($INF));

        return parent::setINF($INF);
    }

    /**
     * {@inheritDoc}
     */
    public function setSpecialLOY($specialLOY)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpecialLOY', array($specialLOY));

        return parent::setSpecialLOY($specialLOY);
    }

    /**
     * {@inheritDoc}
     */
    public function setSpecialAbility($specialAbility)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpecialAbility', array($specialAbility));

        return parent::setSpecialAbility($specialAbility);
    }

    /**
     * {@inheritDoc}
     */
    public function setHasStatesman($hasStatesman)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasStatesman', array($hasStatesman));

        return parent::setHasStatesman($hasStatesman);
    }

    /**
     * {@inheritDoc}
     */
    public function setKnights($knights)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKnights', array($knights));

        return parent::setKnights($knights);
    }

    /**
     * {@inheritDoc}
     */
    public function setTreasury($treasury)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTreasury', array($treasury));

        return parent::setTreasury($treasury);
    }

    /**
     * {@inheritDoc}
     */
    public function setPOP($POP)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPOP', array($POP));

        return parent::setPOP($POP);
    }

    /**
     * {@inheritDoc}
     */
    public function setOffice($office)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOffice', array($office));

        return parent::setOffice($office);
    }

    /**
     * {@inheritDoc}
     */
    public function setPriorConsul($priorConsul)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriorConsul', array($priorConsul));

        return parent::setPriorConsul($priorConsul);
    }

    /**
     * {@inheritDoc}
     */
    public function setCorrupt($corrupt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorrupt', array($corrupt));

        return parent::setCorrupt($corrupt);
    }

    /**
     * {@inheritDoc}
     */
    public function setMajor($major)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMajor', array($major));

        return parent::setMajor($major);
    }

    /**
     * {@inheritDoc}
     */
    public function setRebel($rebel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRebel', array($rebel));

        return parent::setRebel($rebel);
    }

    /**
     * {@inheritDoc}
     */
    public function setCaptive($captive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCaptive', array($captive));

        return parent::setCaptive($captive);
    }

    /**
     * {@inheritDoc}
     */
    public function setFreeTribune($freeTribune)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFreeTribune', array($freeTribune));

        return parent::setFreeTribune($freeTribune);
    }

    /**
     * {@inheritDoc}
     */
    public function setReturningGovernor($returningGovernor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReturningGovernor', array($returningGovernor));

        return parent::setReturningGovernor($returningGovernor);
    }

    /**
     * {@inheritDoc}
     */
    public function getSenatorID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSenatorID', array());

        return parent::getSenatorID();
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseMIL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseMIL', array());

        return parent::getBaseMIL();
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseORA()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseORA', array());

        return parent::getBaseORA();
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseLOY()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseLOY', array());

        return parent::getBaseLOY();
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseINF()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseINF', array());

        return parent::getBaseINF();
    }

    /**
     * {@inheritDoc}
     */
    public function getMIL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMIL', array());

        return parent::getMIL();
    }

    /**
     * {@inheritDoc}
     */
    public function getORA()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getORA', array());

        return parent::getORA();
    }

    /**
     * {@inheritDoc}
     */
    public function getLOY()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLOY', array());

        return parent::getLOY();
    }

    /**
     * {@inheritDoc}
     */
    public function getINF()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getINF', array());

        return parent::getINF();
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecialLOY()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecialLOY', array());

        return parent::getSpecialLOY();
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecialAbility()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecialAbility', array());

        return parent::getSpecialAbility();
    }

    /**
     * {@inheritDoc}
     */
    public function getHasStatesman()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasStatesman', array());

        return parent::getHasStatesman();
    }

    /**
     * {@inheritDoc}
     */
    public function getKnights()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKnights', array());

        return parent::getKnights();
    }

    /**
     * {@inheritDoc}
     */
    public function getTreasury()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTreasury', array());

        return parent::getTreasury();
    }

    /**
     * {@inheritDoc}
     */
    public function getPOP()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPOP', array());

        return parent::getPOP();
    }

    /**
     * {@inheritDoc}
     */
    public function getOffice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffice', array());

        return parent::getOffice();
    }

    /**
     * {@inheritDoc}
     */
    public function getPriorConsul()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriorConsul', array());

        return parent::getPriorConsul();
    }

    /**
     * {@inheritDoc}
     */
    public function getCorrupt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorrupt', array());

        return parent::getCorrupt();
    }

    /**
     * {@inheritDoc}
     */
    public function getMajor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMajor', array());

        return parent::getMajor();
    }

    /**
     * {@inheritDoc}
     */
    public function getRebel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRebel', array());

        return parent::getRebel();
    }

    /**
     * {@inheritDoc}
     */
    public function getCaptive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaptive', array());

        return parent::getCaptive();
    }

    /**
     * {@inheritDoc}
     */
    public function getFreeTribune()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreeTribune', array());

        return parent::getFreeTribune();
    }

    /**
     * {@inheritDoc}
     */
    public function getReturningGovernor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReturningGovernor', array());

        return parent::getReturningGovernor();
    }

    /**
     * {@inheritDoc}
     */
    public function saveData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'saveData', array());

        return parent::saveData();
    }

    /**
     * {@inheritDoc}
     */
    public function changeINF($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeINF', array($value));

        return parent::changeINF($value);
    }

    /**
     * {@inheritDoc}
     */
    public function changeORA($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeORA', array($value));

        return parent::changeORA($value);
    }

    /**
     * {@inheritDoc}
     */
    public function changePOP($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changePOP', array($value));

        return parent::changePOP($value);
    }

    /**
     * {@inheritDoc}
     */
    public function appoint($office)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'appoint', array($office));

        return parent::appoint($office);
    }

    /**
     * {@inheritDoc}
     */
    public function checkCriteria($criteria)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkCriteria', array($criteria));

        return parent::checkCriteria($criteria);
    }

    /**
     * {@inheritDoc}
     */
    public function inRome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'inRome', array());

        return parent::inRome();
    }

    /**
     * {@inheritDoc}
     */
    public function statesmanFamily()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'statesmanFamily', array());

        return parent::statesmanFamily();
    }

    /**
     * {@inheritDoc}
     */
    public function statesmanPlayable($user_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'statesmanPlayable', array($user_id));

        return parent::statesmanPlayable($user_id);
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeck($deck)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeck', array($deck));

        return parent::setDeck($deck);
    }

    /**
     * {@inheritDoc}
     */
    public function setPreciseType($preciseType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreciseType', array($preciseType));

        return parent::setPreciseType($preciseType);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeck()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeck', array());

        return parent::getDeck();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreciseType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreciseType', array());

        return parent::getPreciseType();
    }

    /**
     * {@inheritDoc}
     */
    public function getCardsControlled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCardsControlled', array());

        return parent::getCardsControlled();
    }

    /**
     * {@inheritDoc}
     */
    public function getValue($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValue', array($property));

        return parent::getValue($property);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

}
